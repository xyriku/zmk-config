/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
* random comment to trigger workflow
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE	0
#define SYM	1
#define NAV	2
#define FUN	3

/ {
    combos {
        compatible = "zmk,combos";

        combo_grave {
            timeout-ms = <30>;
            bindings = <&kp GRAVE>;
            key-positions = <1 2>;
            layers = <BASE>;
            require-prior-idle-ms = <100>;
        };

        combo_esc {
            timeout-ms = <30>;
            bindings = <&kp ESC>;
            key-positions = <21 22>;
            layers = <BASE>;
            require-prior-idle-ms = <100>;
        };

        combo_lpar {
            timeout-ms = <30>;
            bindings = <&kp LPAR>;
            key-positions = <15 16>;
            layers = <BASE>;
            require-prior-idle-ms = <50>;
        };

        combo_rpar {
            timeout-ms = <30>;
            bindings = <&kp RPAR>;
            key-positions = <19 20>;
            layers = <BASE>;
            require-prior-idle-ms = <100>;
        };

        combo_lbkt {
            timeout-ms = <30>;
            bindings = <&kp LBKT>;
            key-positions = <3 4>;
            layers = <BASE>;
            require-prior-idle-ms = <100>;
        };

        combo_rbkt {
            timeout-ms = <30>;
            bindings = <&kp RBKT>;
            key-positions = <8 9>;
            layers = <BASE>;
            require-prior-idle-ms = <100>;
        };

        combo_sqt {
            timeout-ms = <30>;
            bindings = <&kp SQT>;
            key-positions = <21 22>;
            layers = <BASE>;
            require-prior-idle-ms = <100>;
        };

        combo_capswd {
            timeout-ms = <40>;
            bindings = <&caps_word>;
            key-positions = <13 14>;
            layers = <BASE>;
            require-prior-idle-ms = <100>;
        };

        left_curlybrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
            layers = <0>;
        };

        right_curlybrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };
    };
};

&lt { tapping-term-ms = <200>; };

/ {
    behaviors {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-while-undecided;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
&none  &kp Q        &kp W        &kp E         &kp R          &kp T              &kp Y                     &kp U     &kp I             &kp O          &kp P            &none
&none  &kp A        &kp S        &kp D         &kp F          &kp G              &kp H                     &kp J     &kp K             &kp L          &lt NAV SEMI     &none
&none  &rpi LGUI Z  &rpi LALT X  &rpi LCTRL C  &kp V          &kp B              &kp N                     &kp M     &rpi LCTRL COMMA  &rpi LALT DOT  &rpi LGUI SLASH  &none
                                 &lt FUN TAB   &lt SYM SPACE  &mt LSHFT SPACE    &rpi LS(LA(LCTRL)) ENTER  &kp BSPC  &kp DEL
            >;
        };

        sym_layer {
            display-name = "SYM";
            bindings = <
&none  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5       &kp N6     &kp N7     &kp N8    &kp N9    &kp N0    &none
&none  &kp GRAVE  &kp TILDE  &kp HASH  &kp EQUAL  &kp PRCNT    &kp CARET  &kp MINUS  &kp STAR  &kp PIPE  &kp SQT   &none
&none  &kp EXCL   &kp AT     &kp PLUS  &kp DLLR   &kp COLON    &kp UNDER  &kp AMPS   &kp LT    &kp GT    &kp BSLH  &none
                             &kp TAB   &kp SPACE  &sk LSHFT    &none      &kp BSPC   &kp DEL
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&none  &kp LC(RIGHT)  &kp LC(RIGHT)  &none      &none  &none           &none     &kp PG_UP  &kp HOME  &kp END    &none  &none
&none  &none          &kp LCTRL      &kp PG_DN  &none  &none           &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &none  &none
&none  &kp LSHFT      &none          &none      &none  &kp LC(LEFT)    &none     &none      &none     &none      &none  &none
                                     &none      &none  &none           &none     &none      &none
            >;
        };

        fun_layer {
            display-name = "FUN";
            bindings = <
&none  &kp PRINTSCREEN  &kp F1  &kp F2   &kp F3   &kp F4     &none       &none         &none         &none         &none  &none
&none  &kp K_COPY       &kp F5  &kp F6   &kp F7   &kp F8     &kp K_PREV  &kp K_PP      &kp K_PP      &kp K_NEXT    &none  &none
&none  &kp K_PASTE      &kp F9  &kp F10  &kp F11  &kp F12    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none
                                &none    &none    &none      &none       &none         &none
            >;
        };
    };
};
